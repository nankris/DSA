class Solution:
    def countSubIslands(self, grid1: List[List[int]], grid2: List[List[int]]) -> int:
        global not_subisland
        def dfs(i, j):
            if i < 0 or i >= len(grid2) or j < 0 or j >= len(grid2[0]) or grid2[i][j] == 0:
                return
            
            if grid2[i][j] == 1:
                if grid1[i][j] == 0:
                    not_subisland[0] = 1
                grid2[i][j] = 0
            
            dfs(i+1, j)
            dfs(i-1, j)
            dfs(i, j+1)
            dfs(i, j-1)

        
        island = 0
        for i in range(len(grid2)):
            for j in range(len(grid2[0])):
                if grid2[i][j] == 1:
                    not_subisland = [0]
                    island += 1
                    dfs(i, j)
                    #print(not_subisland)
                    if not_subisland[0] == 1:
                        island -= 1

        return island        
        #dfs(i, j)



