class Solution:
    def levelOrderBottom(self, root: Optional[TreeNode]) -> List[List[int]]:
        # We can do the same top down approach and reverse no?
        if root == None:
            return []
        queue = []
        queue.append(root)
        level_order = []
        while queue:
            curr_lst = []
            for i in range(len(queue)):
                curr = queue.pop(0)
                curr_lst.append(curr.val)                
                if curr.left:
                    queue.append(curr.left)
                if curr.right:
                    queue.append(curr.right)
            level_order.append(curr_lst)
        return level_order[::-1]    

